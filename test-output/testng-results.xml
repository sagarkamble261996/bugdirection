<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="9" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-08T23:43:21 IST" name="Suite" finished-at="2023-01-08T23:43:32 IST" duration-ms="10382">
    <groups>
      <group name="Regression">
        <method signature="a4.Test3()[pri:0, instance:test_Demo.a4@79e2c065]" name="Test3" class="test_Demo.a4"/>
      </group> <!-- Regression -->
      <group name="sanity">
        <method signature="a4.Test1()[pri:0, instance:test_Demo.a4@79e2c065]" name="Test1" class="test_Demo.a4"/>
        <method signature="a4.Test2()[pri:0, instance:test_Demo.a4@79e2c065]" name="Test2" class="test_Demo.a4"/>
        <method signature="a4.Test4()[pri:0, instance:test_Demo.a4@79e2c065]" name="Test4" class="test_Demo.a4"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2023-01-08T23:43:21 IST" name="Test" finished-at="2023-01-08T23:43:32 IST" duration-ms="10382">
      <class name="test_Demo.a2">
        <test-method is-config="true" signature="setup()[pri:0, instance:test_Demo.a2@478190fc]" started-at="2023-01-08T23:43:22 IST" name="setup" finished-at="2023-01-08T23:43:28 IST" duration-ms="6480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testV()[pri:-1, instance:test_Demo.a2@478190fc]" started-at="2023-01-08T23:43:28 IST" name="testV" finished-at="2023-01-08T23:43:28 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testV -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test_Demo.a2@478190fc]" started-at="2023-01-08T23:43:28 IST" name="setup" finished-at="2023-01-08T23:43:32 IST" duration-ms="3792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testN()[pri:3, instance:test_Demo.a2@478190fc]" started-at="2023-01-08T23:43:32 IST" name="testN" finished-at="2023-01-08T23:43:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testN -->
      </class> <!-- test_Demo.a2 -->
      <class name="test_Demo.a1">
        <test-method is-config="true" signature="bs()[pri:0, instance:test_Demo.a1@8f4ea7c]" started-at="2023-01-08T23:43:21 IST" name="bs" finished-at="2023-01-08T23:43:21 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bs -->
        <test-method is-config="true" signature="bt()[pri:0, instance:test_Demo.a1@8f4ea7c]" started-at="2023-01-08T23:43:21 IST" name="bt" finished-at="2023-01-08T23:43:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bt -->
        <test-method signature="test1()[pri:0, instance:test_Demo.a1@8f4ea7c]" started-at="2023-01-08T23:43:32 IST" name="test1" finished-at="2023-01-08T23:43:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="bc()[pri:0, instance:test_Demo.a1@8f4ea7c]" started-at="2023-01-08T23:43:32 IST" name="bc" finished-at="2023-01-08T23:43:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bc -->
        <test-method is-config="true" signature="BM()[pri:0, instance:test_Demo.a1@8f4ea7c]" started-at="2023-01-08T23:43:32 IST" name="BM" finished-at="2023-01-08T23:43:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method is-config="true" signature="AC()[pri:0, instance:test_Demo.a1@8f4ea7c]" started-at="2023-01-08T23:43:32 IST" name="AC" finished-at="2023-01-08T23:43:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AC -->
        <test-method is-config="true" signature="AT()[pri:0, instance:test_Demo.a1@8f4ea7c]" started-at="2023-01-08T23:43:32 IST" name="AT" finished-at="2023-01-08T23:43:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AT -->
        <test-method is-config="true" signature="AM()[pri:0, instance:test_Demo.a1@8f4ea7c]" started-at="2023-01-08T23:43:32 IST" name="AM" finished-at="2023-01-08T23:43:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="AS()[pri:0, instance:test_Demo.a1@8f4ea7c]" started-at="2023-01-08T23:43:32 IST" name="AS" finished-at="2023-01-08T23:43:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AS -->
      </class> <!-- test_Demo.a1 -->
      <class name="test_Demo.a4">
        <test-method signature="Test1()[pri:0, instance:test_Demo.a4@79e2c065]" started-at="2023-01-08T23:43:32 IST" name="Test1" finished-at="2023-01-08T23:43:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method signature="Test2()[pri:0, instance:test_Demo.a4@79e2c065]" started-at="2023-01-08T23:43:32 IST" name="Test2" finished-at="2023-01-08T23:43:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method signature="Test3()[pri:0, instance:test_Demo.a4@79e2c065]" started-at="2023-01-08T23:43:32 IST" name="Test3" finished-at="2023-01-08T23:43:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method signature="Test4()[pri:0, instance:test_Demo.a4@79e2c065]" started-at="2023-01-08T23:43:32 IST" name="Test4" finished-at="2023-01-08T23:43:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test4 -->
      </class> <!-- test_Demo.a4 -->
      <class name="test_Demo.a3">
        <test-method is-config="true" signature="setup()[pri:0, instance:test_Demo.a3@74e52303]" started-at="2023-01-08T23:43:21 IST" name="setup" finished-at="2023-01-08T23:43:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TestA()[pri:0, instance:test_Demo.a3@74e52303]" started-at="2023-01-08T23:43:21 IST" name="TestA" finished-at="2023-01-08T23:43:21 IST" duration-ms="15" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test_Demo.a3.TestA(a3.java:16)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestA -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:test_Demo.a3@74e52303]" started-at="2023-01-08T23:43:21 IST" name="teardown" finished-at="2023-01-08T23:43:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test_Demo.a3@74e52303]" started-at="2023-01-08T23:43:21 IST" name="setup" finished-at="2023-01-08T23:43:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TestB()[pri:0, instance:test_Demo.a3@74e52303]" started-at="2023-01-08T23:43:21 IST" name="TestB" finished-at="2023-01-08T23:43:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestB -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test_Demo.a3@74e52303]" started-at="2023-01-08T23:43:21 IST" name="setup" finished-at="2023-01-08T23:43:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:test_Demo.a3@74e52303]" started-at="2023-01-08T23:43:21 IST" name="teardown" finished-at="2023-01-08T23:43:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="TestB()[pri:0, instance:test_Demo.a3@74e52303]" started-at="2023-01-08T23:43:21 IST" name="TestB" finished-at="2023-01-08T23:43:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestB -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:test_Demo.a3@74e52303]" started-at="2023-01-08T23:43:21 IST" name="teardown" finished-at="2023-01-08T23:43:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="TestC()[pri:0, instance:test_Demo.a3@74e52303]" started-at="2023-01-08T23:43:21 IST" name="TestC" finished-at="2023-01-08T23:43:21 IST" depends-on-methods="test_Demo.a3.TestA" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method a3.TestC()[pri:0, instance:test_Demo.a3@74e52303] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method a3.TestC()[pri:0, instance:test_Demo.a3@74e52303] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestC -->
      </class> <!-- test_Demo.a3 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
